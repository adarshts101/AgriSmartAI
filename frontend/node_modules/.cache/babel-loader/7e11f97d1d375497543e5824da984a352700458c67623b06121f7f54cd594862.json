{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adarsh\\\\AgriSmartAI\\\\frontend\\\\src\\\\components\\\\WeatherCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { fetchWeather } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherCard() {\n  _s();\n  const [city, setCity] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  async function handleCheck() {\n    setLoading(true);\n    try {\n      const res = await fetchWeather(city);\n      setData(res);\n    } catch (e) {\n      setData({\n        error: \"Failed to fetch\"\n      });\n    }\n    setLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: city,\n      onChange: e => setCity(e.target.value),\n      placeholder: \"Enter city (e.g., Pune)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCheck,\n        disabled: !city || loading,\n        children: loading ? \"Checking...\" : \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 12\n      },\n      children: data.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: data.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [data.city, \", \", data.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Temp: \", data.temp_c, \" \\xB0C (feels \", data.feels_like_c, \"\\xB0C)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Humidity: \", data.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Condition: \", data.condition]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherCard, \"tZ+/QgezgiI3L7w0LYYtsPDOuX8=\");\n_c = WeatherCard;\nvar _c;\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"names":["React","useState","fetchWeather","jsxDEV","_jsxDEV","WeatherCard","_s","city","setCity","data","setData","loading","setLoading","handleCheck","res","e","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","style","marginTop","onClick","disabled","color","country","temp_c","feels_like_c","humidity","condition","_c","$RefreshReg$"],"sources":["C:/Users/Adarsh/AgriSmartAI/frontend/src/components/WeatherCard.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { fetchWeather } from \"../api\";\r\n\r\nexport default function WeatherCard(){\r\n  const [city, setCity] = useState(\"\");\r\n  const [data, setData] = useState(null);\r\n  const [loading,setLoading]=useState(false);\r\n  async function handleCheck(){\r\n    setLoading(true);\r\n    try{\r\n      const res = await fetchWeather(city);\r\n      setData(res);\r\n    }catch(e){\r\n      setData({error:\"Failed to fetch\"});\r\n    }\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <div className=\"app-card\">\r\n      <h2>Weather Forecast</h2>\r\n      <input value={city} onChange={e=>setCity(e.target.value)} placeholder=\"Enter city (e.g., Pune)\" />\r\n      <div style={{marginTop:8}}>\r\n        <button onClick={handleCheck} disabled={!city || loading}>{loading? \"Checking...\":\"Check\"}</button>\r\n      </div>\r\n      {data && (\r\n        <div style={{marginTop:12}}>\r\n          {data.error ? <div style={{color:'red'}}>{data.error}</div> :\r\n            (<div>\r\n              <div><b>{data.city}, {data.country}</b></div>\r\n              <div>Temp: {data.temp_c} °C (feels {data.feels_like_c}°C)</div>\r\n              <div>Humidity: {data.humidity}%</div>\r\n              <div>Condition: {data.condition}</div>\r\n            </div>)}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}