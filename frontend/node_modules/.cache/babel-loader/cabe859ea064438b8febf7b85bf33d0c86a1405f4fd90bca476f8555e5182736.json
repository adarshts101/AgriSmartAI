{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adarsh\\\\AgriSmartAI\\\\frontend\\\\src\\\\components\\\\MarketCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\n\n// Mock API functions for demonstration\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fetchMarketPrices = async crop => {\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  const mockPrices = {\n    wheat: {\n      price_rupee_per_quintal: 2150,\n      date: \"2025-09-01\",\n      market: \"APMC Delhi\"\n    },\n    rice: {\n      price_rupee_per_quintal: 3200,\n      date: \"2025-09-01\",\n      market: \"APMC Delhi\"\n    },\n    onion: {\n      price_rupee_per_quintal: 1800,\n      date: \"2025-09-01\",\n      market: \"APMC Delhi\"\n    },\n    tomato: {\n      price_rupee_per_quintal: 2500,\n      date: \"2025-09-01\",\n      market: \"APMC Delhi\"\n    }\n  };\n  return mockPrices[crop];\n};\nconst predictMarket = async (crop, days) => {\n  await new Promise(resolve => setTimeout(resolve, 1200));\n  const mockPredictions = {\n    wheat: {\n      predicted_price: 2280,\n      confidence: 0.85,\n      trend: \"up\"\n    },\n    rice: {\n      predicted_price: 3350,\n      confidence: 0.78,\n      trend: \"up\"\n    },\n    onion: {\n      predicted_price: 1650,\n      confidence: 0.72,\n      trend: \"down\"\n    },\n    tomato: {\n      predicted_price: 2650,\n      confidence: 0.80,\n      trend: \"up\"\n    }\n  };\n  return mockPredictions[crop];\n};\nconst CROP_OPTIONS = [{\n  value: \"wheat\",\n  label: \"Wheat\",\n  icon: \"🌾\"\n}, {\n  value: \"rice\",\n  label: \"Rice\",\n  icon: \"🍚\"\n}, {\n  value: \"onion\",\n  label: \"Onion\",\n  icon: \"🧅\"\n}, {\n  value: \"tomato\",\n  label: \"Tomato\",\n  icon: \"🍅\"\n}];\nexport default function MarketPricesSection() {\n  _s();\n  const [selectedCrop, setSelectedCrop] = useState(\"wheat\");\n  const [marketData, setMarketData] = useState({\n    price: null,\n    prediction: null,\n    isLoadingPrice: false,\n    isLoadingPrediction: false,\n    priceError: null,\n    predictionError: null\n  });\n  const handleFetchPrice = useCallback(async () => {\n    setMarketData(prev => ({\n      ...prev,\n      isLoadingPrice: true,\n      priceError: null\n    }));\n    try {\n      const priceData = await fetchMarketPrices(selectedCrop);\n      setMarketData(prev => ({\n        ...prev,\n        price: priceData,\n        isLoadingPrice: false\n      }));\n    } catch (error) {\n      setMarketData(prev => ({\n        ...prev,\n        priceError: \"Failed to fetch market price. Please try again.\",\n        isLoadingPrice: false\n      }));\n    }\n  }, [selectedCrop]);\n  const handleFetchPrediction = useCallback(async () => {\n    setMarketData(prev => ({\n      ...prev,\n      isLoadingPrediction: true,\n      predictionError: null\n    }));\n    try {\n      const predictionData = await predictMarket(selectedCrop, 7);\n      setMarketData(prev => ({\n        ...prev,\n        prediction: predictionData,\n        isLoadingPrediction: false\n      }));\n    } catch (error) {\n      setMarketData(prev => ({\n        ...prev,\n        predictionError: \"Failed to fetch prediction. Please try again.\",\n        isLoadingPrediction: false\n      }));\n    }\n  }, [selectedCrop]);\n  const handleCropChange = event => {\n    const newCrop = event.target.value;\n    setSelectedCrop(newCrop);\n    setMarketData(prev => ({\n      ...prev,\n      price: null,\n      prediction: null,\n      priceError: null,\n      predictionError: null\n    }));\n  };\n  const formatCurrency = amount => {\n    return `₹${amount === null || amount === void 0 ? void 0 : amount.toLocaleString('en-IN')}`;\n  };\n  const formatDate = dateString => {\n    try {\n      return new Date(dateString).toLocaleDateString('en-IN', {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric'\n      });\n    } catch (error) {\n      return dateString;\n    }\n  };\n  const getTrendIcon = trend => {\n    return trend === 'up' ? '📈' : trend === 'down' ? '📉' : '📊';\n  };\n  const getTrendColor = trend => {\n    return trend === 'up' ? '#10b981' : trend === 'down' ? '#ef4444' : '#6b7280';\n  };\n  const {\n    price,\n    prediction,\n    isLoadingPrice,\n    isLoadingPrediction,\n    priceError,\n    predictionError\n  } = marketData;\n  const selectedCropData = CROP_OPTIONS.find(crop => crop.value === selectedCrop);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .market-section {\n          background: #f8fafc;\n          padding: 1.5rem;\n          border-radius: 12px;\n          margin: 1.5rem 0;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\n        }\n\n        .section-header {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          margin-bottom: 1.5rem;\n        }\n\n        .section-title {\n          font-size: 1.25rem;\n          font-weight: 700;\n          color: #1f2937;\n          margin: 0;\n        }\n\n        .crop-selector {\n          position: relative;\n          display: inline-block;\n        }\n\n        .crop-select {\n          appearance: none;\n          background: white;\n          border: 1px solid #d1d5db;\n          border-radius: 8px;\n          padding: 0.5rem 2rem 0.5rem 0.75rem;\n          font-size: 0.875rem;\n          font-weight: 500;\n          color: #374151;\n          cursor: pointer;\n          min-width: 120px;\n          transition: all 0.2s ease;\n        }\n\n        .crop-select:hover {\n          border-color: #9ca3af;\n        }\n\n        .crop-select:focus {\n          outline: none;\n          border-color: #3b82f6;\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n        }\n\n        .crop-selector::after {\n          content: '▼';\n          position: absolute;\n          right: 0.75rem;\n          top: 50%;\n          transform: translateY(-50%);\n          font-size: 0.75rem;\n          color: #6b7280;\n          pointer-events: none;\n        }\n\n        .market-cards {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n          gap: 1rem;\n          margin-bottom: 1rem;\n        }\n\n        .market-card {\n          background: white;\n          border-radius: 12px;\n          padding: 1.25rem;\n          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n          transition: all 0.2s ease;\n        }\n\n        .market-card:hover {\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        }\n\n        .card-header {\n          display: flex;\n          align-items: center;\n          margin-bottom: 0.75rem;\n        }\n\n        .card-icon {\n          font-size: 1.25rem;\n          margin-right: 0.5rem;\n        }\n\n        .card-title {\n          font-size: 0.875rem;\n          font-weight: 600;\n          color: #6b7280;\n          margin: 0;\n        }\n\n        .card-value {\n          font-size: 1.5rem;\n          font-weight: 700;\n          color: #1f2937;\n          margin: 0.25rem 0;\n        }\n\n        .card-subtitle {\n          font-size: 0.75rem;\n          color: #9ca3af;\n          margin: 0;\n        }\n\n        .prediction-card .card-value {\n          color: #10b981;\n        }\n\n        .trend-indicator {\n          display: inline-flex;\n          align-items: center;\n          gap: 0.25rem;\n          font-size: 0.75rem;\n          font-weight: 500;\n          margin-top: 0.5rem;\n        }\n\n        .confidence-badge {\n          background: #e0f2fe;\n          color: #0369a1;\n          padding: 0.25rem 0.5rem;\n          border-radius: 12px;\n          font-size: 0.625rem;\n          font-weight: 600;\n          display: inline-block;\n          margin-top: 0.5rem;\n        }\n\n        .action-buttons {\n          display: flex;\n          gap: 0.75rem;\n          flex-wrap: wrap;\n        }\n\n        .btn {\n          background: #22c55e;\n          color: white;\n          border: none;\n          border-radius: 8px;\n          padding: 0.5rem 1rem;\n          font-size: 0.875rem;\n          font-weight: 600;\n          cursor: pointer;\n          transition: all 0.2s ease;\n          min-width: 120px;\n        }\n\n        .btn:hover:not(:disabled) {\n          background: #16a34a;\n          transform: translateY(-1px);\n        }\n\n        .btn:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n          transform: none;\n        }\n\n        .btn--secondary {\n          background: #3b82f6;\n        }\n\n        .btn--secondary:hover:not(:disabled) {\n          background: #2563eb;\n        }\n\n        .loading-spinner {\n          display: inline-block;\n          width: 12px;\n          height: 12px;\n          border: 2px solid rgba(255, 255, 255, 0.3);\n          border-radius: 50%;\n          border-top-color: white;\n          animation: spin 1s ease-in-out infinite;\n          margin-right: 0.5rem;\n        }\n\n        @keyframes spin {\n          to { transform: rotate(360deg); }\n        }\n\n        .error-state {\n          background: #fef2f2;\n          border: 1px solid #fecaca;\n          border-radius: 8px;\n          padding: 1rem;\n          color: #dc2626;\n          font-size: 0.875rem;\n          text-align: center;\n        }\n\n        .empty-state {\n          background: white;\n          border: 1px dashed #d1d5db;\n          border-radius: 8px;\n          padding: 2rem;\n          text-align: center;\n          color: #6b7280;\n          font-size: 0.875rem;\n        }\n\n        .last-updated {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 0.25rem;\n          font-size: 0.75rem;\n          color: #9ca3af;\n          margin-top: 1rem;\n        }\n\n        .update-icon {\n          font-size: 0.875rem;\n        }\n\n        @media (max-width: 640px) {\n          .section-header {\n            flex-direction: column;\n            align-items: flex-start;\n            gap: 1rem;\n          }\n          \n          .market-cards {\n            grid-template-columns: 1fr;\n          }\n          \n          .action-buttons {\n            flex-direction: column;\n          }\n          \n          .btn {\n            min-width: unset;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"market-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Market Prices & Prediction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crop-selector\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCrop,\n            onChange: handleCropChange,\n            className: \"crop-select\",\n            children: CROP_OPTIONS.map(crop => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: crop.value,\n              children: [crop.icon, \" \", crop.label]\n            }, crop.value, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"market-cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"market-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-icon\",\n              children: \"\\uD83D\\uDCB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title\",\n              children: \"Current Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), priceError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-state\",\n            children: priceError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this) : price ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-value\",\n              children: formatCurrency(price.price_rupee_per_quintal)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-subtitle\",\n              children: \"per quintal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-subtitle\",\n              children: [price.market, \" \\u2022 \", formatDate(price.date)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click \\\"Get Latest Price\\\" to fetch current market rates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"market-card prediction-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-icon\",\n              children: \"\\uD83D\\uDD2E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title\",\n              children: \"7-Day Prediction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), predictionError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-state\",\n            children: predictionError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this) : prediction ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-value\",\n              children: formatCurrency(prediction.predicted_price)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-subtitle\",\n              children: \"per quintal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trend-indicator\",\n              style: {\n                color: getTrendColor(prediction.trend)\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: getTrendIcon(prediction.trend)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  textTransform: 'capitalize'\n                },\n                children: [prediction.trend, \"ward trend\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"confidence-badge\",\n              children: [Math.round(prediction.confidence * 100), \"% Confidence\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click \\\"Predict (7 days)\\\" to get price forecast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFetchPrice,\n          disabled: isLoadingPrice,\n          className: \"btn\",\n          children: [isLoadingPrice && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 32\n          }, this), isLoadingPrice ? \"Loading...\" : \"Get Latest Price\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFetchPrediction,\n          disabled: isLoadingPrediction,\n          className: \"btn btn--secondary\",\n          children: [isLoadingPrediction && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 37\n          }, this), isLoadingPrediction ? \"Predicting...\" : \"Predict (7 days)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), (price || prediction) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"last-updated\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"update-icon\",\n          children: \"\\uD83D\\uDD50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Last updated: \", new Date().toLocaleTimeString('en-IN', {\n            hour: '2-digit',\n            minute: '2-digit'\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MarketPricesSection, \"cFjPGH20oeUcz8a8WPQrOynZpds=\");\n_c = MarketPricesSection;\nvar _c;\n$RefreshReg$(_c, \"MarketPricesSection\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchMarketPrices","crop","Promise","resolve","setTimeout","mockPrices","wheat","price_rupee_per_quintal","date","market","rice","onion","tomato","predictMarket","days","mockPredictions","predicted_price","confidence","trend","CROP_OPTIONS","value","label","icon","MarketPricesSection","_s","selectedCrop","setSelectedCrop","marketData","setMarketData","price","prediction","isLoadingPrice","isLoadingPrediction","priceError","predictionError","handleFetchPrice","prev","priceData","error","handleFetchPrediction","predictionData","handleCropChange","event","newCrop","target","formatCurrency","amount","toLocaleString","formatDate","dateString","Date","toLocaleDateString","day","month","year","getTrendIcon","getTrendColor","selectedCropData","find","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","map","style","color","textTransform","Math","round","onClick","disabled","toLocaleTimeString","hour","minute","_c","$RefreshReg$"],"sources":["C:/Users/Adarsh/AgriSmartAI/frontend/src/components/MarketCard.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\n\r\n// Mock API functions for demonstration\r\nconst fetchMarketPrices = async (crop) => {\r\n  await new Promise(resolve => setTimeout(resolve, 1000));\r\n  \r\n  const mockPrices = {\r\n    wheat: { price_rupee_per_quintal: 2150, date: \"2025-09-01\", market: \"APMC Delhi\" },\r\n    rice: { price_rupee_per_quintal: 3200, date: \"2025-09-01\", market: \"APMC Delhi\" },\r\n    onion: { price_rupee_per_quintal: 1800, date: \"2025-09-01\", market: \"APMC Delhi\" },\r\n    tomato: { price_rupee_per_quintal: 2500, date: \"2025-09-01\", market: \"APMC Delhi\" }\r\n  };\r\n  \r\n  return mockPrices[crop];\r\n};\r\n\r\nconst predictMarket = async (crop, days) => {\r\n  await new Promise(resolve => setTimeout(resolve, 1200));\r\n  \r\n  const mockPredictions = {\r\n    wheat: { predicted_price: 2280, confidence: 0.85, trend: \"up\" },\r\n    rice: { predicted_price: 3350, confidence: 0.78, trend: \"up\" },\r\n    onion: { predicted_price: 1650, confidence: 0.72, trend: \"down\" },\r\n    tomato: { predicted_price: 2650, confidence: 0.80, trend: \"up\" }\r\n  };\r\n  \r\n  return mockPredictions[crop];\r\n};\r\n\r\nconst CROP_OPTIONS = [\r\n  { value: \"wheat\", label: \"Wheat\", icon: \"🌾\" },\r\n  { value: \"rice\", label: \"Rice\", icon: \"🍚\" },\r\n  { value: \"onion\", label: \"Onion\", icon: \"🧅\" },\r\n  { value: \"tomato\", label: \"Tomato\", icon: \"🍅\" }\r\n];\r\n\r\nexport default function MarketPricesSection() {\r\n  const [selectedCrop, setSelectedCrop] = useState(\"wheat\");\r\n  const [marketData, setMarketData] = useState({\r\n    price: null,\r\n    prediction: null,\r\n    isLoadingPrice: false,\r\n    isLoadingPrediction: false,\r\n    priceError: null,\r\n    predictionError: null,\r\n  });\r\n\r\n  const handleFetchPrice = useCallback(async () => {\r\n    setMarketData(prev => ({ ...prev, isLoadingPrice: true, priceError: null }));\r\n    \r\n    try {\r\n      const priceData = await fetchMarketPrices(selectedCrop);\r\n      setMarketData(prev => ({ ...prev, price: priceData, isLoadingPrice: false }));\r\n    } catch (error) {\r\n      setMarketData(prev => ({\r\n        ...prev,\r\n        priceError: \"Failed to fetch market price. Please try again.\",\r\n        isLoadingPrice: false,\r\n      }));\r\n    }\r\n  }, [selectedCrop]);\r\n\r\n  const handleFetchPrediction = useCallback(async () => {\r\n    setMarketData(prev => ({ ...prev, isLoadingPrediction: true, predictionError: null }));\r\n    \r\n    try {\r\n      const predictionData = await predictMarket(selectedCrop, 7);\r\n      setMarketData(prev => ({ ...prev, prediction: predictionData, isLoadingPrediction: false }));\r\n    } catch (error) {\r\n      setMarketData(prev => ({\r\n        ...prev,\r\n        predictionError: \"Failed to fetch prediction. Please try again.\",\r\n        isLoadingPrediction: false,\r\n      }));\r\n    }\r\n  }, [selectedCrop]);\r\n\r\n  const handleCropChange = (event) => {\r\n    const newCrop = event.target.value;\r\n    setSelectedCrop(newCrop);\r\n    setMarketData(prev => ({\r\n      ...prev,\r\n      price: null,\r\n      prediction: null,\r\n      priceError: null,\r\n      predictionError: null,\r\n    }));\r\n  };\r\n\r\n  const formatCurrency = (amount) => {\r\n    return `₹${amount?.toLocaleString('en-IN')}`;\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    try {\r\n      return new Date(dateString).toLocaleDateString('en-IN', {\r\n        day: 'numeric',\r\n        month: 'short',\r\n        year: 'numeric'\r\n      });\r\n    } catch (error) {\r\n      return dateString;\r\n    }\r\n  };\r\n\r\n  const getTrendIcon = (trend) => {\r\n    return trend === 'up' ? '📈' : trend === 'down' ? '📉' : '📊';\r\n  };\r\n\r\n  const getTrendColor = (trend) => {\r\n    return trend === 'up' ? '#10b981' : trend === 'down' ? '#ef4444' : '#6b7280';\r\n  };\r\n\r\n  const { price, prediction, isLoadingPrice, isLoadingPrediction, priceError, predictionError } = marketData;\r\n  const selectedCropData = CROP_OPTIONS.find(crop => crop.value === selectedCrop);\r\n\r\n  return (\r\n    <>\r\n      <style>{`\r\n        .market-section {\r\n          background: #f8fafc;\r\n          padding: 1.5rem;\r\n          border-radius: 12px;\r\n          margin: 1.5rem 0;\r\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\r\n        }\r\n\r\n        .section-header {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n          margin-bottom: 1.5rem;\r\n        }\r\n\r\n        .section-title {\r\n          font-size: 1.25rem;\r\n          font-weight: 700;\r\n          color: #1f2937;\r\n          margin: 0;\r\n        }\r\n\r\n        .crop-selector {\r\n          position: relative;\r\n          display: inline-block;\r\n        }\r\n\r\n        .crop-select {\r\n          appearance: none;\r\n          background: white;\r\n          border: 1px solid #d1d5db;\r\n          border-radius: 8px;\r\n          padding: 0.5rem 2rem 0.5rem 0.75rem;\r\n          font-size: 0.875rem;\r\n          font-weight: 500;\r\n          color: #374151;\r\n          cursor: pointer;\r\n          min-width: 120px;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .crop-select:hover {\r\n          border-color: #9ca3af;\r\n        }\r\n\r\n        .crop-select:focus {\r\n          outline: none;\r\n          border-color: #3b82f6;\r\n          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n        }\r\n\r\n        .crop-selector::after {\r\n          content: '▼';\r\n          position: absolute;\r\n          right: 0.75rem;\r\n          top: 50%;\r\n          transform: translateY(-50%);\r\n          font-size: 0.75rem;\r\n          color: #6b7280;\r\n          pointer-events: none;\r\n        }\r\n\r\n        .market-cards {\r\n          display: grid;\r\n          grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\r\n          gap: 1rem;\r\n          margin-bottom: 1rem;\r\n        }\r\n\r\n        .market-card {\r\n          background: white;\r\n          border-radius: 12px;\r\n          padding: 1.25rem;\r\n          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .market-card:hover {\r\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n        .card-header {\r\n          display: flex;\r\n          align-items: center;\r\n          margin-bottom: 0.75rem;\r\n        }\r\n\r\n        .card-icon {\r\n          font-size: 1.25rem;\r\n          margin-right: 0.5rem;\r\n        }\r\n\r\n        .card-title {\r\n          font-size: 0.875rem;\r\n          font-weight: 600;\r\n          color: #6b7280;\r\n          margin: 0;\r\n        }\r\n\r\n        .card-value {\r\n          font-size: 1.5rem;\r\n          font-weight: 700;\r\n          color: #1f2937;\r\n          margin: 0.25rem 0;\r\n        }\r\n\r\n        .card-subtitle {\r\n          font-size: 0.75rem;\r\n          color: #9ca3af;\r\n          margin: 0;\r\n        }\r\n\r\n        .prediction-card .card-value {\r\n          color: #10b981;\r\n        }\r\n\r\n        .trend-indicator {\r\n          display: inline-flex;\r\n          align-items: center;\r\n          gap: 0.25rem;\r\n          font-size: 0.75rem;\r\n          font-weight: 500;\r\n          margin-top: 0.5rem;\r\n        }\r\n\r\n        .confidence-badge {\r\n          background: #e0f2fe;\r\n          color: #0369a1;\r\n          padding: 0.25rem 0.5rem;\r\n          border-radius: 12px;\r\n          font-size: 0.625rem;\r\n          font-weight: 600;\r\n          display: inline-block;\r\n          margin-top: 0.5rem;\r\n        }\r\n\r\n        .action-buttons {\r\n          display: flex;\r\n          gap: 0.75rem;\r\n          flex-wrap: wrap;\r\n        }\r\n\r\n        .btn {\r\n          background: #22c55e;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 8px;\r\n          padding: 0.5rem 1rem;\r\n          font-size: 0.875rem;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n          min-width: 120px;\r\n        }\r\n\r\n        .btn:hover:not(:disabled) {\r\n          background: #16a34a;\r\n          transform: translateY(-1px);\r\n        }\r\n\r\n        .btn:disabled {\r\n          opacity: 0.6;\r\n          cursor: not-allowed;\r\n          transform: none;\r\n        }\r\n\r\n        .btn--secondary {\r\n          background: #3b82f6;\r\n        }\r\n\r\n        .btn--secondary:hover:not(:disabled) {\r\n          background: #2563eb;\r\n        }\r\n\r\n        .loading-spinner {\r\n          display: inline-block;\r\n          width: 12px;\r\n          height: 12px;\r\n          border: 2px solid rgba(255, 255, 255, 0.3);\r\n          border-radius: 50%;\r\n          border-top-color: white;\r\n          animation: spin 1s ease-in-out infinite;\r\n          margin-right: 0.5rem;\r\n        }\r\n\r\n        @keyframes spin {\r\n          to { transform: rotate(360deg); }\r\n        }\r\n\r\n        .error-state {\r\n          background: #fef2f2;\r\n          border: 1px solid #fecaca;\r\n          border-radius: 8px;\r\n          padding: 1rem;\r\n          color: #dc2626;\r\n          font-size: 0.875rem;\r\n          text-align: center;\r\n        }\r\n\r\n        .empty-state {\r\n          background: white;\r\n          border: 1px dashed #d1d5db;\r\n          border-radius: 8px;\r\n          padding: 2rem;\r\n          text-align: center;\r\n          color: #6b7280;\r\n          font-size: 0.875rem;\r\n        }\r\n\r\n        .last-updated {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          gap: 0.25rem;\r\n          font-size: 0.75rem;\r\n          color: #9ca3af;\r\n          margin-top: 1rem;\r\n        }\r\n\r\n        .update-icon {\r\n          font-size: 0.875rem;\r\n        }\r\n\r\n        @media (max-width: 640px) {\r\n          .section-header {\r\n            flex-direction: column;\r\n            align-items: flex-start;\r\n            gap: 1rem;\r\n          }\r\n          \r\n          .market-cards {\r\n            grid-template-columns: 1fr;\r\n          }\r\n          \r\n          .action-buttons {\r\n            flex-direction: column;\r\n          }\r\n          \r\n          .btn {\r\n            min-width: unset;\r\n          }\r\n        }\r\n      `}</style>\r\n\r\n      <div className=\"market-section\">\r\n        <div className=\"section-header\">\r\n          <h2 className=\"section-title\">Market Prices & Prediction</h2>\r\n          <div className=\"crop-selector\">\r\n            <select\r\n              value={selectedCrop}\r\n              onChange={handleCropChange}\r\n              className=\"crop-select\"\r\n            >\r\n              {CROP_OPTIONS.map((crop) => (\r\n                <option key={crop.value} value={crop.value}>\r\n                  {crop.icon} {crop.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"market-cards\">\r\n          {/* Current Price Card */}\r\n          <div className=\"market-card\">\r\n            <div className=\"card-header\">\r\n              <span className=\"card-icon\">💰</span>\r\n              <h3 className=\"card-title\">Current Price</h3>\r\n            </div>\r\n            \r\n            {priceError ? (\r\n              <div className=\"error-state\">{priceError}</div>\r\n            ) : price ? (\r\n              <>\r\n                <div className=\"card-value\">\r\n                  {formatCurrency(price.price_rupee_per_quintal)}\r\n                </div>\r\n                <p className=\"card-subtitle\">per quintal</p>\r\n                <p className=\"card-subtitle\">\r\n                  {price.market} • {formatDate(price.date)}\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <div className=\"empty-state\">\r\n                <p>Click \"Get Latest Price\" to fetch current market rates</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Price Prediction Card */}\r\n          <div className=\"market-card prediction-card\">\r\n            <div className=\"card-header\">\r\n              <span className=\"card-icon\">🔮</span>\r\n              <h3 className=\"card-title\">7-Day Prediction</h3>\r\n            </div>\r\n            \r\n            {predictionError ? (\r\n              <div className=\"error-state\">{predictionError}</div>\r\n            ) : prediction ? (\r\n              <>\r\n                <div className=\"card-value\">\r\n                  {formatCurrency(prediction.predicted_price)}\r\n                </div>\r\n                <p className=\"card-subtitle\">per quintal</p>\r\n                <div className=\"trend-indicator\" style={{ color: getTrendColor(prediction.trend) }}>\r\n                  <span>{getTrendIcon(prediction.trend)}</span>\r\n                  <span style={{ textTransform: 'capitalize' }}>{prediction.trend}ward trend</span>\r\n                </div>\r\n                <span className=\"confidence-badge\">\r\n                  {Math.round(prediction.confidence * 100)}% Confidence\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <div className=\"empty-state\">\r\n                <p>Click \"Predict (7 days)\" to get price forecast</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"action-buttons\">\r\n          <button\r\n            onClick={handleFetchPrice}\r\n            disabled={isLoadingPrice}\r\n            className=\"btn\"\r\n          >\r\n            {isLoadingPrice && <span className=\"loading-spinner\"></span>}\r\n            {isLoadingPrice ? \"Loading...\" : \"Get Latest Price\"}\r\n          </button>\r\n\r\n          <button\r\n            onClick={handleFetchPrediction}\r\n            disabled={isLoadingPrediction}\r\n            className=\"btn btn--secondary\"\r\n          >\r\n            {isLoadingPrediction && <span className=\"loading-spinner\"></span>}\r\n            {isLoadingPrediction ? \"Predicting...\" : \"Predict (7 days)\"}\r\n          </button>\r\n        </div>\r\n\r\n        {(price || prediction) && (\r\n          <div className=\"last-updated\">\r\n            <span className=\"update-icon\">🕐</span>\r\n            <span>Last updated: {new Date().toLocaleTimeString('en-IN', { hour: '2-digit', minute: '2-digit' })}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,iBAAiB,GAAG,MAAOC,IAAI,IAAK;EACxC,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;EAEvD,MAAME,UAAU,GAAG;IACjBC,KAAK,EAAE;MAAEC,uBAAuB,EAAE,IAAI;MAAEC,IAAI,EAAE,YAAY;MAAEC,MAAM,EAAE;IAAa,CAAC;IAClFC,IAAI,EAAE;MAAEH,uBAAuB,EAAE,IAAI;MAAEC,IAAI,EAAE,YAAY;MAAEC,MAAM,EAAE;IAAa,CAAC;IACjFE,KAAK,EAAE;MAAEJ,uBAAuB,EAAE,IAAI;MAAEC,IAAI,EAAE,YAAY;MAAEC,MAAM,EAAE;IAAa,CAAC;IAClFG,MAAM,EAAE;MAAEL,uBAAuB,EAAE,IAAI;MAAEC,IAAI,EAAE,YAAY;MAAEC,MAAM,EAAE;IAAa;EACpF,CAAC;EAED,OAAOJ,UAAU,CAACJ,IAAI,CAAC;AACzB,CAAC;AAED,MAAMY,aAAa,GAAG,MAAAA,CAAOZ,IAAI,EAAEa,IAAI,KAAK;EAC1C,MAAM,IAAIZ,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;EAEvD,MAAMY,eAAe,GAAG;IACtBT,KAAK,EAAE;MAAEU,eAAe,EAAE,IAAI;MAAEC,UAAU,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC;IAC/DR,IAAI,EAAE;MAAEM,eAAe,EAAE,IAAI;MAAEC,UAAU,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC;IAC9DP,KAAK,EAAE;MAAEK,eAAe,EAAE,IAAI;MAAEC,UAAU,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAO,CAAC;IACjEN,MAAM,EAAE;MAAEI,eAAe,EAAE,IAAI;MAAEC,UAAU,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK;EACjE,CAAC;EAED,OAAOH,eAAe,CAACd,IAAI,CAAC;AAC9B,CAAC;AAED,MAAMkB,YAAY,GAAG,CACnB;EAAEC,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC9C;EAAEF,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE,MAAM;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC5C;EAAEF,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC9C;EAAEF,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAK,CAAC,CACjD;AAED,eAAe,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC5C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,OAAO,CAAC;EACzD,MAAM,CAACiC,UAAU,EAAEC,aAAa,CAAC,GAAGlC,QAAQ,CAAC;IAC3CmC,KAAK,EAAE,IAAI;IACXC,UAAU,EAAE,IAAI;IAChBC,cAAc,EAAE,KAAK;IACrBC,mBAAmB,EAAE,KAAK;IAC1BC,UAAU,EAAE,IAAI;IAChBC,eAAe,EAAE;EACnB,CAAC,CAAC;EAEF,MAAMC,gBAAgB,GAAGxC,WAAW,CAAC,YAAY;IAC/CiC,aAAa,CAACQ,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEL,cAAc,EAAE,IAAI;MAAEE,UAAU,EAAE;IAAK,CAAC,CAAC,CAAC;IAE5E,IAAI;MACF,MAAMI,SAAS,GAAG,MAAMrC,iBAAiB,CAACyB,YAAY,CAAC;MACvDG,aAAa,CAACQ,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAEP,KAAK,EAAEQ,SAAS;QAAEN,cAAc,EAAE;MAAM,CAAC,CAAC,CAAC;IAC/E,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdV,aAAa,CAACQ,IAAI,KAAK;QACrB,GAAGA,IAAI;QACPH,UAAU,EAAE,iDAAiD;QAC7DF,cAAc,EAAE;MAClB,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,CAACN,YAAY,CAAC,CAAC;EAElB,MAAMc,qBAAqB,GAAG5C,WAAW,CAAC,YAAY;IACpDiC,aAAa,CAACQ,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEJ,mBAAmB,EAAE,IAAI;MAAEE,eAAe,EAAE;IAAK,CAAC,CAAC,CAAC;IAEtF,IAAI;MACF,MAAMM,cAAc,GAAG,MAAM3B,aAAa,CAACY,YAAY,EAAE,CAAC,CAAC;MAC3DG,aAAa,CAACQ,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAEN,UAAU,EAAEU,cAAc;QAAER,mBAAmB,EAAE;MAAM,CAAC,CAAC,CAAC;IAC9F,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdV,aAAa,CAACQ,IAAI,KAAK;QACrB,GAAGA,IAAI;QACPF,eAAe,EAAE,+CAA+C;QAChEF,mBAAmB,EAAE;MACvB,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC;EAElB,MAAMgB,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAACxB,KAAK;IAClCM,eAAe,CAACiB,OAAO,CAAC;IACxBf,aAAa,CAACQ,IAAI,KAAK;MACrB,GAAGA,IAAI;MACPP,KAAK,EAAE,IAAI;MACXC,UAAU,EAAE,IAAI;MAChBG,UAAU,EAAE,IAAI;MAChBC,eAAe,EAAE;IACnB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMW,cAAc,GAAIC,MAAM,IAAK;IACjC,OAAO,IAAIA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,cAAc,CAAC,OAAO,CAAC,EAAE;EAC9C,CAAC;EAED,MAAMC,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAI;MACF,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,kBAAkB,CAAC,OAAO,EAAE;QACtDC,GAAG,EAAE,SAAS;QACdC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACd,OAAOW,UAAU;IACnB;EACF,CAAC;EAED,MAAMM,YAAY,GAAIrC,KAAK,IAAK;IAC9B,OAAOA,KAAK,KAAK,IAAI,GAAG,IAAI,GAAGA,KAAK,KAAK,MAAM,GAAG,IAAI,GAAG,IAAI;EAC/D,CAAC;EAED,MAAMsC,aAAa,GAAItC,KAAK,IAAK;IAC/B,OAAOA,KAAK,KAAK,IAAI,GAAG,SAAS,GAAGA,KAAK,KAAK,MAAM,GAAG,SAAS,GAAG,SAAS;EAC9E,CAAC;EAED,MAAM;IAAEW,KAAK;IAAEC,UAAU;IAAEC,cAAc;IAAEC,mBAAmB;IAAEC,UAAU;IAAEC;EAAgB,CAAC,GAAGP,UAAU;EAC1G,MAAM8B,gBAAgB,GAAGtC,YAAY,CAACuC,IAAI,CAACzD,IAAI,IAAIA,IAAI,CAACmB,KAAK,KAAKK,YAAY,CAAC;EAE/E,oBACE5B,OAAA,CAAAE,SAAA;IAAA4D,QAAA,gBACE9D,OAAA;MAAA8D,QAAA,EAAQ;AACdeAEVlE,OAAA;MAAKmE,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAC7B9D,OAAA;QAAKmE,SAAS,EAAC,gBAAgB;QAAAL,QAAA,gBAC7B9D,OAAA;UAAImE,SAAS,EAAC,eAAe;UAAAL,QAAA,EAAC;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7DlE,OAAA;UAAKmE,SAAS,EAAC,eAAe;UAAAL,QAAA,eAC5B9D,OAAA;YACEuB,KAAK,EAAEK,YAAa;YACpBwC,QAAQ,EAAExB,gBAAiB;YAC3BuB,SAAS,EAAC,aAAa;YAAAL,QAAA,EAEtBxC,YAAY,CAAC+C,GAAG,CAAEjE,IAAI,iBACrBJ,OAAA;cAAyBuB,KAAK,EAAEnB,IAAI,CAACmB,KAAM;cAAAuC,QAAA,GACxC1D,IAAI,CAACqB,IAAI,EAAC,GAAC,EAACrB,IAAI,CAACoB,KAAK;YAAA,GADZpB,IAAI,CAACmB,KAAK;cAAAwC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEf,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENlE,OAAA;QAAKmE,SAAS,EAAC,cAAc;QAAAL,QAAA,gBAE3B9D,OAAA;UAAKmE,SAAS,EAAC,aAAa;UAAAL,QAAA,gBAC1B9D,OAAA;YAAKmE,SAAS,EAAC,aAAa;YAAAL,QAAA,gBAC1B9D,OAAA;cAAMmE,SAAS,EAAC,WAAW;cAAAL,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACrClE,OAAA;cAAImE,SAAS,EAAC,YAAY;cAAAL,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC,EAEL9B,UAAU,gBACTpC,OAAA;YAAKmE,SAAS,EAAC,aAAa;YAAAL,QAAA,EAAE1B;UAAU;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,GAC7ClC,KAAK,gBACPhC,OAAA,CAAAE,SAAA;YAAA4D,QAAA,gBACE9D,OAAA;cAAKmE,SAAS,EAAC,YAAY;cAAAL,QAAA,EACxBd,cAAc,CAAChB,KAAK,CAACtB,uBAAuB;YAAC;cAAAqD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C,CAAC,eACNlE,OAAA;cAAGmE,SAAS,EAAC,eAAe;cAAAL,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC5ClE,OAAA;cAAGmE,SAAS,EAAC,eAAe;cAAAL,QAAA,GACzB9B,KAAK,CAACpB,MAAM,EAAC,UAAG,EAACuC,UAAU,CAACnB,KAAK,CAACrB,IAAI,CAAC;YAAA;cAAAoD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC;UAAA,eACJ,CAAC,gBAEHlE,OAAA;YAAKmE,SAAS,EAAC,aAAa;YAAAL,QAAA,eAC1B9D,OAAA;cAAA8D,QAAA,EAAG;YAAsD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGNlE,OAAA;UAAKmE,SAAS,EAAC,6BAA6B;UAAAL,QAAA,gBAC1C9D,OAAA;YAAKmE,SAAS,EAAC,aAAa;YAAAL,QAAA,gBAC1B9D,OAAA;cAAMmE,SAAS,EAAC,WAAW;cAAAL,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACrClE,OAAA;cAAImE,SAAS,EAAC,YAAY;cAAAL,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC,EAEL7B,eAAe,gBACdrC,OAAA;YAAKmE,SAAS,EAAC,aAAa;YAAAL,QAAA,EAAEzB;UAAe;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,GAClDjC,UAAU,gBACZjC,OAAA,CAAAE,SAAA;YAAA4D,QAAA,gBACE9D,OAAA;cAAKmE,SAAS,EAAC,YAAY;cAAAL,QAAA,EACxBd,cAAc,CAACf,UAAU,CAACd,eAAe;YAAC;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC,eACNlE,OAAA;cAAGmE,SAAS,EAAC,eAAe;cAAAL,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC5ClE,OAAA;cAAKmE,SAAS,EAAC,iBAAiB;cAACG,KAAK,EAAE;gBAAEC,KAAK,EAAEZ,aAAa,CAAC1B,UAAU,CAACZ,KAAK;cAAE,CAAE;cAAAyC,QAAA,gBACjF9D,OAAA;gBAAA8D,QAAA,EAAOJ,YAAY,CAACzB,UAAU,CAACZ,KAAK;cAAC;gBAAA0C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC7ClE,OAAA;gBAAMsE,KAAK,EAAE;kBAAEE,aAAa,EAAE;gBAAa,CAAE;gBAAAV,QAAA,GAAE7B,UAAU,CAACZ,KAAK,EAAC,YAAU;cAAA;gBAAA0C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9E,CAAC,eACNlE,OAAA;cAAMmE,SAAS,EAAC,kBAAkB;cAAAL,QAAA,GAC/BW,IAAI,CAACC,KAAK,CAACzC,UAAU,CAACb,UAAU,GAAG,GAAG,CAAC,EAAC,cAC3C;YAAA;cAAA2C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,eACP,CAAC,gBAEHlE,OAAA;YAAKmE,SAAS,EAAC,aAAa;YAAAL,QAAA,eAC1B9D,OAAA;cAAA8D,QAAA,EAAG;YAA8C;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENlE,OAAA;QAAKmE,SAAS,EAAC,gBAAgB;QAAAL,QAAA,gBAC7B9D,OAAA;UACE2E,OAAO,EAAErC,gBAAiB;UAC1BsC,QAAQ,EAAE1C,cAAe;UACzBiC,SAAS,EAAC,KAAK;UAAAL,QAAA,GAEd5B,cAAc,iBAAIlC,OAAA;YAAMmE,SAAS,EAAC;UAAiB;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAC3DhC,cAAc,GAAG,YAAY,GAAG,kBAAkB;QAAA;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eAETlE,OAAA;UACE2E,OAAO,EAAEjC,qBAAsB;UAC/BkC,QAAQ,EAAEzC,mBAAoB;UAC9BgC,SAAS,EAAC,oBAAoB;UAAAL,QAAA,GAE7B3B,mBAAmB,iBAAInC,OAAA;YAAMmE,SAAS,EAAC;UAAiB;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAChE/B,mBAAmB,GAAG,eAAe,GAAG,kBAAkB;QAAA;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAEL,CAAClC,KAAK,IAAIC,UAAU,kBACnBjC,OAAA;QAAKmE,SAAS,EAAC,cAAc;QAAAL,QAAA,gBAC3B9D,OAAA;UAAMmE,SAAS,EAAC,aAAa;UAAAL,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvClE,OAAA;UAAA8D,QAAA,GAAM,gBAAc,EAAC,IAAIT,IAAI,CAAC,CAAC,CAACwB,kBAAkB,CAAC,OAAO,EAAE;YAAEC,IAAI,EAAE,SAAS;YAAEC,MAAM,EAAE;UAAU,CAAC,CAAC;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxG,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACN,CAAC;AAEP;AAACvC,EAAA,CAhbuBD,mBAAmB;AAAAsD,EAAA,GAAnBtD,mBAAmB;AAAA,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}